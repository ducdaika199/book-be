cache: &global_cache
  paths:
    - .npm
  policy: pull

stages:
  - cache
  - test
  - build-docker
  - deploy

global-cache:
  image: $PLATFORM_DOCKER_REGISTRY_URL/dockerhub/node:16.15.1-bullseye-slim
  stage: cache
  only:
    refs:
      - main
    changes:
      - package-lock.json
  cache:
    <<: *global_cache
    policy: pull-push
  script:
    - npm ci --cache .npm --prefer-offline

test:
  image: $PLATFORM_DOCKER_REGISTRY_URL/dockerhub/node:16.15.1-bullseye-slim
  stage: test
  cache:
    <<: *global_cache
  before_script:
    - npm ci --cache .npm --prefer-offline
  script:
    - npm run lint
    - npm test
    - npm run sonar

build-docker:
  stage: build-docker
  image:
    name: $PLATFORM_DOCKER_REGISTRY_URL/gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  only:
    - main
  before_script:
    - export TAG=$CI_COMMIT_TAG
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"credsStore\":\"ecr-login\"}" > /kaniko/.docker/config.json
    - /kaniko/executor --context . --dockerfile Dockerfile --destination $PLATFORM_DOCKER_REGISTRY_URL/book-be:$TAG

deploy:
  stage: deploy
  image: $PLATFORM_DOCKER_REGISTRY_URL/dockerhub/alpine/k8s:1.17.5
  only:
    - main
  dependencies: []
  variables:
    GIT_STRATEGY: none
  script:
    - aws eks --region $PLATFORM_AWS_REGION update-kubeconfig --name $PLATFORM_EKS_CLUSTER --kubeconfig kubeconfig
    - kubectl --kubeconfig kubeconfig -n global-platform rollout restart deployments book-be
